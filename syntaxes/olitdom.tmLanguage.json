{
  "scopeName": "text.olitdom",
  "name": "OlitDOM",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#html-templates"
    },
    {
      "include": "#typescript-objects"
    },
    {
      "include": "#key-value-pairs"
    },
    {
      "include": "#key-only"
    },
    {
      "include": "#base-olit-notation"
    },
    {
      "include": "#punctuation"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.hash.olitdom",
          "match": "#.*$"
        }
      ]
    },
    "html-templates": {
      "patterns": [
        {
          "name": "meta.embedded.html.olitdom",
          "begin": "(?:inner_html|template|content)\\s*:\\s*html\\s*`",
          "end": "`",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.template.begin.olitdom" }
          },
          "endCaptures": {
            "0": { "name": "punctuation.definition.template.end.olitdom" }
          },
          "contentName": "text.html.basic",
          "patterns": [
            {
              "include": "text.html.basic"
            }
          ]
        },
        {
          "name": "meta.template-reference.olitdom",
          "match": "(?:inner_html|template|content)\\s*:\\s*(TemplateResult<?[^>]*>?|html)",
          "captures": {
            "1": { "name": "entity.name.type.template.olitdom" }
          }
        },
        {
          "name": "string.template.html.olitdom",
          "begin": "html\\s*`",
          "end": "`",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.template.begin.olitdom" }
          },
          "endCaptures": {
            "0": { "name": "punctuation.definition.template.end.olitdom" }
          },
          "patterns": [
            {
              "include": "text.html.basic"
            }
          ]
        }
      ]
    },
    "typescript-objects": {
      "patterns": [
        {
          "name": "entity.name.type.class.olitdom",
          "match": "\\b[A-Z][a-zA-Z0-9_]*\\b(?=\\s*[:{])"
        },
        {
          "name": "entity.name.type.interface.olitdom",
          "match": "\\b[A-Z][a-zA-Z0-9_]*\\b(?=\\s*\\.)"
        },
        {
          "name": "variable.other.object.olitdom",
          "match": "\\b[a-z][a-zA-Z0-9_]*\\b(?=\\s*[.:])"
        },
        {
          "name": "entity.name.type.enum.olitdom",
          "match": "\\b[A-Z][A-Z0-9_]*\\b"
        },
        {
          "name": "variable.other.property.olitdom",
          "match": "(?<=\\.)\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "key-value-pairs": {
      "patterns": [
        {
          "name": "meta.key-value.olitdom",
          "match": "^\\s*([^:\\n\\r]+)(\\s*:\\s*)([^\\n;]+)",
          "captures": {
            "1": { "name": "variable.other.property.olitdom" },
            "2": { "name": "punctuation.separator.key-value.olitdom" },
            "3": { 
              "patterns": [
                { "include": "#typescript-objects" },
                { "include": "#values" }
              ]
            }
          }
        }
      ]
    },
    "key-only": {
      "patterns": [
        {
          "name": "meta.key-only.olitdom",
          "match": "^\\s*([^:\\n\\r]+)(:)\\s*$",
          "captures": {
            "1": { "name": "variable.other.property.olitdom" },
            "2": { "name": "punctuation.separator.key-value.olitdom" }
          }
        }
      ]
    },
    "base-olit-notation": {
      "patterns": [
        {
          "include": "#values"
        },
        {
          "include": "#operators"
        },
        {
          "include": "#placeholders"
        }
      ]
    },
    "values": {
      "patterns": [
        {
          "name": "string.quoted.double.olitdom",
          "begin": "\"",
          "end": "\"",
          "beginCaptures": { "0": { "name": "punctuation.definition.string.begin.olitdom" } },
          "endCaptures": { "0": { "name": "punctuation.definition.string.end.olitdom" } },
          "patterns": [
            {
              "name": "constant.character.escape.olitdom",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.olitdom",
          "begin": "'",
          "end": "'",
          "beginCaptures": { "0": { "name": "punctuation.definition.string.begin.olitdom" } },
          "endCaptures": { "0": { "name": "punctuation.definition.string.end.olitdom" } }
        },
        {
          "name": "constant.numeric.olitdom",
          "match": "\\b[+-]?\\d+(?:\\.\\d+)?\\b"
        },
        {
          "name": "constant.language.boolean.olitdom",
          "match": "\\b(true|false)\\b"
        },
        {
          "name": "constant.other.date.olitdom",
          "match": "\\b\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d{3})?)?(?:Z|[+\\-]\\d{2}:\\d{2})?)?\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.comparison.olitdom",
          "match": "\\b(=|!=|<>|<=|>=|<|>)\\b"
        },
        {
          "name": "keyword.operator.arithmetic.olitdom",
          "match": "[+\\-*/%]"
        },
        {
          "name": "keyword.operator.logical.olitdom",
          "match": "\\b(AND|OR|NOT)\\b"
        }
      ]
    },
    "placeholders": {
      "patterns": [
        {
          "name": "variable.language.placeholder.olitdom",
          "match": "\\b_\\b"
        }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "name": "punctuation.separator.key-value.olitdom",
          "match": ":"
        },
        {
          "name": "punctuation.terminator.olitdom",
          "match": ";"
        },
        {
          "name": "punctuation.separator.dot.olitdom",
          "match": "\\."
        },
        {
          "name": "punctuation.definition.block.olitdom",
          "match": "[{}\\[\\]()]"
        }
      ]
    }
  }
}
